<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6Iu5i8X7faLxcPvjWOsLJifbtNuFppqIrW2C2PFTQR5o7RUxapOMmpsSxfwIt8WQBeT/AEKXrs40TvDC
        d1jxsGPMQ4svFuNm2MvZxgj0x3HjBrGYCLPGmCzdHjf00435MZ7FxsUbNYt/8qaVxz//2gAMAwEAAgAD
        AAAAEJDDDDDDDDDDDDDDDDDDDDPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPMo4vPLHfPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKLLuLsNldPPPFPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPLN8x7/t61FPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOaBQIN3vFFPPFPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLAdDjqIPF/PPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFq
        HjUrfBNPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLHviCMHJNPPFPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPKD9TB/PPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKGNITvPPFPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPMNCOPnPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKHXHNGdPPPF
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPXKA0h5fPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        LCsG7HPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFvHwPPPPPPPFPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPDz+BfPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKASDHPPPPPPPFPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPLKfPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMHdPPPPPPPP
        PFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLGJvPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        KMnPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLK3PPPPPPPPPPFPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIAAAAAAAAAAAAAAAAAAAAPPPPPPPPPP
        PPPPPPPPPPPPPPPP/8QAKBEBAAECBAYCAgMAAAAAAAAAAREAIRAxQVBRYXGBofCR8YCxwdHh/9oACAED
        AQE/EPyUUgTTAiOKr4Ee+60h97ikMOzkBScyTP4oggPKscWhyVpgvHnpfvSmAyJfv3Kg40mOv3QFUOpR
        tF60ZHZ8bOhZi9CdamzC99KShxbLzaP1QME8MzHXQ7X51FFdT/BWbotQklXh32aa0Sojnvpwqal6KXF4
        aYy61nC8Cn7rYazls8qX4KhT5yfqlXI41DtGrQqzQI8M70dnUSouaoyVctWgEUq4aum0CMmlObhe3bCI
        zplMfef+bWRXXL/P1U4NgbWTHAEsUpdrzcCxO2ZYWo2gxViiCp6Uq57Q2tgAkpxzLq5+8tqF6Tck8uNP
        KB4TK/17ltmVIJnB2tZ26NuINDbsjbRLSztpZP4Qf//EACMRAQACAgIBAwUAAAAAAAAAAAEAETFQIUEQ
        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
</value>
  </data>
</root>